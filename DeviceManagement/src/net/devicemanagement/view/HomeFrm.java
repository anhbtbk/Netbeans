/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package net.devicemanagement.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.devicemanagement.controller.DataController;
import net.devicemanagement.controller.DataControllerImp;
import net.devicemanagement.view.model.Laptop;
import net.devicemanagement.view.model.Pc;
import net.devicemanagement.view.model.Phone;

/**
 *
 * @author Tuan Anh
 */
public class HomeFrm extends javax.swing.JFrame implements ActionListener {

    private List<Phone> phones; //tạo list các điện thoại
    private DefaultTableModel tableModelPhone;
    private DataController dataController;
    private List<Pc> pcs; //tạo list các PC
    private DefaultTableModel tableModelPc;
    private List<Laptop> laptops; //tạo list các laptop
    private DefaultTableModel tableModelLaptop;

    /**
     * Creates new form HomeFrm
     */
    public HomeFrm() {
        initComponents();
        setLocationRelativeTo(null);
        addButtonGroup(); //Phương thức chỉ chọn 1 radio button trong 1 nhóm
        addActionListener(); //Đăng kí sự kiện cho từng nút
        phones = new ArrayList<>();
        tableModelPhone = (DefaultTableModel) tblPhone.getModel();
        pcs = new ArrayList<>();
        tableModelPc = (DefaultTableModel) tblPc.getModel();
        laptops = new ArrayList<>();
        tableModelLaptop = (DefaultTableModel) tblLaptop.getModel();
        //khi ứng dụng được kích hoạt, dữ liệu tự load và hiển thị lên
        dataController = new DataControllerImp();
        LoadData();
        ShowData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSortPhone = new javax.swing.ButtonGroup();
        buttonGroupSearchPhone = new javax.swing.ButtonGroup();
        buttonGroupSortPc = new javax.swing.ButtonGroup();
        buttonGroupSearchPc = new javax.swing.ButtonGroup();
        buttonGroupSortLaptop = new javax.swing.ButtonGroup();
        buttonGroupSearchLaptop = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        rbSortPhoneNameASC = new javax.swing.JRadioButton();
        rbSortPhoneNameDESC = new javax.swing.JRadioButton();
        rbSortPhonePhaseASC = new javax.swing.JRadioButton();
        rbSortPhonePhaseDESC = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        rbSearchPhoneByImei = new javax.swing.JRadioButton();
        rbSearchPhoneByName = new javax.swing.JRadioButton();
        txtSearchPhoneByImei = new javax.swing.JTextField();
        txtSearchPhoneByName = new javax.swing.JTextField();
        rbSearchPhoneByPhase = new javax.swing.JRadioButton();
        comboSearchPhoneByPhase = new javax.swing.JComboBox<>();
        btnSearchPhone = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhone = new javax.swing.JTable();
        btnAddPhone = new javax.swing.JButton();
        btnEditPhone = new javax.swing.JButton();
        btnRemovePhone = new javax.swing.JButton();
        btnRefreshPhone = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        rbSortChipPcASC = new javax.swing.JRadioButton();
        rbSortChipPcDESC = new javax.swing.JRadioButton();
        rbSortRamPcASC = new javax.swing.JRadioButton();
        rbSortRamPcDESC = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        rbSearchPcBySerial = new javax.swing.JRadioButton();
        rbSearchPcByName = new javax.swing.JRadioButton();
        txtSearchPcBySerial = new javax.swing.JTextField();
        txtSearchPcByName = new javax.swing.JTextField();
        rbSearchPcByRam = new javax.swing.JRadioButton();
        btnSearchPc = new javax.swing.JButton();
        txtSearchPcByRam = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPc = new javax.swing.JTable();
        btnRefreshPc = new javax.swing.JButton();
        btnAddPc = new javax.swing.JButton();
        btnEditPc = new javax.swing.JButton();
        btnRemovePc = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        rbSortChipLaptopASC = new javax.swing.JRadioButton();
        rbSortChipLaptopDESC = new javax.swing.JRadioButton();
        rbSortRamLaptopASC = new javax.swing.JRadioButton();
        rbSortRamLaptopDESC = new javax.swing.JRadioButton();
        jPanel12 = new javax.swing.JPanel();
        rbSearchLaptopBySerial = new javax.swing.JRadioButton();
        rbSearchLaptopByName = new javax.swing.JRadioButton();
        txtSearchLaptopBySerial = new javax.swing.JTextField();
        txtSearchLaptopByName = new javax.swing.JTextField();
        rbSearchLaptopByRam = new javax.swing.JRadioButton();
        btnSearchLaptop = new javax.swing.JButton();
        txtSearchLaptopByRam = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLaptop = new javax.swing.JTable();
        btnRefreshLaptop = new javax.swing.JButton();
        btnAddLaptop = new javax.swing.JButton();
        btnEditLaptop = new javax.swing.JButton();
        btnRemoveLaptop = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ THIẾT BỊ");
        setResizable(false);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sắp xếp điện thoại", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        rbSortPhoneNameASC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortPhoneNameASC.setText("Theo tên a-z");
        rbSortPhoneNameASC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortPhoneNameASCActionPerformed(evt);
            }
        });

        rbSortPhoneNameDESC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortPhoneNameDESC.setText("Theo tên z-a");

        rbSortPhonePhaseASC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortPhonePhaseASC.setText("Theo giai đoạn a-z");
        rbSortPhonePhaseASC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortPhonePhaseASCActionPerformed(evt);
            }
        });

        rbSortPhonePhaseDESC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortPhonePhaseDESC.setText("Theo giai đoạn z-a");
        rbSortPhonePhaseDESC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortPhonePhaseDESCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSortPhoneNameASC)
                    .addComponent(rbSortPhoneNameDESC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSortPhonePhaseASC)
                    .addComponent(rbSortPhonePhaseDESC))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSortPhoneNameASC)
                    .addComponent(rbSortPhonePhaseASC))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSortPhoneNameDESC)
                    .addComponent(rbSortPhonePhaseDESC))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm điện thoại", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        rbSearchPhoneByImei.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSearchPhoneByImei.setText("Theo IMEI");

        rbSearchPhoneByName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSearchPhoneByName.setText("Theo tên");
        rbSearchPhoneByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSearchPhoneByNameActionPerformed(evt);
            }
        });

        txtSearchPhoneByImei.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchPhoneByImei.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchPhoneByImeiActionPerformed(evt);
            }
        });

        txtSearchPhoneByName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        rbSearchPhoneByPhase.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSearchPhoneByPhase.setText("Theo giai đoạn");
        rbSearchPhoneByPhase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSearchPhoneByPhaseActionPerformed(evt);
            }
        });

        comboSearchPhoneByPhase.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboSearchPhoneByPhase.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EVT", "DVT", "PVT" }));

        btnSearchPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearchPhone.setText("Tìm");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSearchPhoneByImei, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbSearchPhoneByName, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbSearchPhoneByPhase))
                .addGap(23, 23, 23)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearchPhoneByImei)
                    .addComponent(txtSearchPhoneByName)
                    .addComponent(comboSearchPhoneByPhase, 0, 256, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(btnSearchPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSearchPhoneByImei)
                    .addComponent(txtSearchPhoneByImei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSearchPhoneByName)
                    .addComponent(txtSearchPhoneByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchPhone))
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSearchPhoneByPhase)
                    .addComponent(comboSearchPhoneByPhase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tblPhone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số IMEI", "Tên Model", "Giai đoạn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPhone);

        btnAddPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddPhone.setText("Thêm điện thoại");
        btnAddPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPhoneActionPerformed(evt);
            }
        });

        btnEditPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditPhone.setText("Sửa điện thoại");

        btnRemovePhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemovePhone.setText("Xóa điện thoại");

        btnRefreshPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRefreshPhone.setText("Làm mới");
        btnRefreshPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshPhoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnRefreshPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemovePhone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefreshPhone)
                    .addComponent(btnAddPhone)
                    .addComponent(btnEditPhone)
                    .addComponent(btnRemovePhone))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("QUẢN LÝ ĐIỆN THOẠI", jPanel1);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sắp xếp PC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        rbSortChipPcASC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortChipPcASC.setText("Theo chip tăng dần");
        rbSortChipPcASC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortChipPcASCActionPerformed(evt);
            }
        });

        rbSortChipPcDESC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortChipPcDESC.setText("Theo chip giảm dần");
        rbSortChipPcDESC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortChipPcDESCActionPerformed(evt);
            }
        });

        rbSortRamPcASC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortRamPcASC.setText("Theo RAM tăng dần");
        rbSortRamPcASC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortRamPcASCActionPerformed(evt);
            }
        });

        rbSortRamPcDESC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortRamPcDESC.setText("Theo RAM giảm dần");
        rbSortRamPcDESC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortRamPcDESCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSortChipPcASC)
                    .addComponent(rbSortChipPcDESC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSortRamPcASC)
                    .addComponent(rbSortRamPcDESC))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSortChipPcASC)
                    .addComponent(rbSortRamPcASC))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSortChipPcDESC)
                    .addComponent(rbSortRamPcDESC))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm PC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        rbSearchPcBySerial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSearchPcBySerial.setText("Theo số serial");

        rbSearchPcByName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSearchPcByName.setText("Theo tên");
        rbSearchPcByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSearchPcByNameActionPerformed(evt);
            }
        });

        txtSearchPcBySerial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchPcBySerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchPcBySerialActionPerformed(evt);
            }
        });

        txtSearchPcByName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        rbSearchPcByRam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSearchPcByRam.setText("Theo RAM");
        rbSearchPcByRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSearchPcByRamActionPerformed(evt);
            }
        });

        btnSearchPc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearchPc.setText("Tìm");

        txtSearchPcByRam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSearchPcByName, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbSearchPcByRam)
                    .addComponent(rbSearchPcBySerial))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchPcByName)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(txtSearchPcByRam, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtSearchPcBySerial))
                .addGap(18, 18, 18)
                .addComponent(btnSearchPc, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSearchPcBySerial)
                    .addComponent(txtSearchPcBySerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchPc)
                    .addComponent(txtSearchPcByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbSearchPcByName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchPcByRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbSearchPcByRam))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        tblPc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số serial", "Tên PC", "CPU", "Dung lượng RAM", "Dung lượng ổ cứng", "Card đồ họa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPc);

        btnRefreshPc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRefreshPc.setText("Làm mới");
        btnRefreshPc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshPcActionPerformed(evt);
            }
        });

        btnAddPc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddPc.setText("Thêm PC");
        btnAddPc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPcActionPerformed(evt);
            }
        });

        btnEditPc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditPc.setText("Sửa PC");

        btnRemovePc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemovePc.setText("Xóa PC");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnRefreshPc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddPc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditPc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemovePc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefreshPc)
                    .addComponent(btnAddPc)
                    .addComponent(btnEditPc)
                    .addComponent(btnRemovePc))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("QUẢN LÝ PC", jPanel2);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sắp xếp Laptop", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        rbSortChipLaptopASC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortChipLaptopASC.setText("Theo chip tăng dần");
        rbSortChipLaptopASC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortChipLaptopASCActionPerformed(evt);
            }
        });

        rbSortChipLaptopDESC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortChipLaptopDESC.setText("Theo chip giảm dần");
        rbSortChipLaptopDESC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortChipLaptopDESCActionPerformed(evt);
            }
        });

        rbSortRamLaptopASC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortRamLaptopASC.setText("Theo RAM tăng dần");
        rbSortRamLaptopASC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortRamLaptopASCActionPerformed(evt);
            }
        });

        rbSortRamLaptopDESC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSortRamLaptopDESC.setText("Theo RAM giảm dần");
        rbSortRamLaptopDESC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortRamLaptopDESCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSortChipLaptopASC)
                    .addComponent(rbSortChipLaptopDESC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSortRamLaptopASC)
                    .addComponent(rbSortRamLaptopDESC))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSortChipLaptopASC)
                    .addComponent(rbSortRamLaptopASC))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSortChipLaptopDESC)
                    .addComponent(rbSortRamLaptopDESC))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm Laptop", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        rbSearchLaptopBySerial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSearchLaptopBySerial.setText("Theo số serial");

        rbSearchLaptopByName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSearchLaptopByName.setText("Theo tên");
        rbSearchLaptopByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSearchLaptopByNameActionPerformed(evt);
            }
        });

        txtSearchLaptopBySerial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchLaptopBySerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchLaptopBySerialActionPerformed(evt);
            }
        });

        txtSearchLaptopByName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        rbSearchLaptopByRam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSearchLaptopByRam.setText("Theo RAM");
        rbSearchLaptopByRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSearchLaptopByRamActionPerformed(evt);
            }
        });

        btnSearchLaptop.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearchLaptop.setText("Tìm");

        txtSearchLaptopByRam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSearchLaptopByName, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbSearchLaptopByRam)
                    .addComponent(rbSearchLaptopBySerial))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchLaptopByName)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(txtSearchLaptopByRam, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtSearchLaptopBySerial))
                .addGap(18, 18, 18)
                .addComponent(btnSearchLaptop, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSearchLaptopBySerial)
                    .addComponent(txtSearchLaptopBySerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchLaptop)
                    .addComponent(txtSearchLaptopByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbSearchLaptopByName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchLaptopByRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbSearchLaptopByRam))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        tblLaptop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số serial", "Tên laptop", "CPU", "Dung lượng RAM", "Dung lượng ổ cứng", "Card đồ họa", "Màn hình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblLaptop);

        btnRefreshLaptop.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRefreshLaptop.setText("Làm mới");
        btnRefreshLaptop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshLaptopActionPerformed(evt);
            }
        });

        btnAddLaptop.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddLaptop.setText("Thêm laptop");
        btnAddLaptop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLaptopActionPerformed(evt);
            }
        });

        btnEditLaptop.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditLaptop.setText("Sửa laptop");

        btnRemoveLaptop.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemoveLaptop.setText("Xóa laptop");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnRefreshLaptop, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddLaptop, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditLaptop, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemoveLaptop, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefreshLaptop)
                    .addComponent(btnAddLaptop)
                    .addComponent(btnEditLaptop)
                    .addComponent(btnRemoveLaptop))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("QUẢN LÝ LAPTOP", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 543, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("QUẢN LÝ MÀN HÌNH", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 543, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("THÔNG TIN NHÂN VIÊN", jPanel5);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 543, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("QUẢN LÝ MƯỢN", jPanel6);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/turn-off-24px.png"))); // NOI18N
        jMenuItem1.setText("Thoát");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddPhoneActionPerformed

    private void btnRefreshPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRefreshPhoneActionPerformed

    private void rbSortPhoneNameASCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortPhoneNameASCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortPhoneNameASCActionPerformed

    private void rbSortPhonePhaseDESCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortPhonePhaseDESCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortPhonePhaseDESCActionPerformed

    private void rbSortPhonePhaseASCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortPhonePhaseASCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortPhonePhaseASCActionPerformed

    private void rbSearchPhoneByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSearchPhoneByNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSearchPhoneByNameActionPerformed

    private void txtSearchPhoneByImeiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchPhoneByImeiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchPhoneByImeiActionPerformed

    private void rbSearchPhoneByPhaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSearchPhoneByPhaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSearchPhoneByPhaseActionPerformed
//Menu item thoát ứng dụng
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void rbSortChipPcASCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortChipPcASCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortChipPcASCActionPerformed

    private void rbSortRamPcASCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortRamPcASCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortRamPcASCActionPerformed

    private void rbSortRamPcDESCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortRamPcDESCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortRamPcDESCActionPerformed

    private void rbSearchPcByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSearchPcByNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSearchPcByNameActionPerformed

    private void txtSearchPcBySerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchPcBySerialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchPcBySerialActionPerformed

    private void rbSearchPcByRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSearchPcByRamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSearchPcByRamActionPerformed

    private void btnRefreshPcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshPcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRefreshPcActionPerformed

    private void btnAddPcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddPcActionPerformed

    private void rbSortChipPcDESCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortChipPcDESCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortChipPcDESCActionPerformed

    private void rbSortChipLaptopASCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortChipLaptopASCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortChipLaptopASCActionPerformed

    private void rbSortChipLaptopDESCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortChipLaptopDESCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortChipLaptopDESCActionPerformed

    private void rbSortRamLaptopASCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortRamLaptopASCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortRamLaptopASCActionPerformed

    private void rbSortRamLaptopDESCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortRamLaptopDESCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSortRamLaptopDESCActionPerformed

    private void rbSearchLaptopByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSearchLaptopByNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSearchLaptopByNameActionPerformed

    private void txtSearchLaptopBySerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchLaptopBySerialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchLaptopBySerialActionPerformed

    private void rbSearchLaptopByRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSearchLaptopByRamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSearchLaptopByRamActionPerformed

    private void btnRefreshLaptopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshLaptopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRefreshLaptopActionPerformed

    private void btnAddLaptopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLaptopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddLaptopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddLaptop;
    private javax.swing.JButton btnAddPc;
    private javax.swing.JButton btnAddPhone;
    private javax.swing.JButton btnEditLaptop;
    private javax.swing.JButton btnEditPc;
    private javax.swing.JButton btnEditPhone;
    private javax.swing.JButton btnRefreshLaptop;
    private javax.swing.JButton btnRefreshPc;
    private javax.swing.JButton btnRefreshPhone;
    private javax.swing.JButton btnRemoveLaptop;
    private javax.swing.JButton btnRemovePc;
    private javax.swing.JButton btnRemovePhone;
    private javax.swing.JButton btnSearchLaptop;
    private javax.swing.JButton btnSearchPc;
    private javax.swing.JButton btnSearchPhone;
    private javax.swing.ButtonGroup buttonGroupSearchLaptop;
    private javax.swing.ButtonGroup buttonGroupSearchPc;
    private javax.swing.ButtonGroup buttonGroupSearchPhone;
    private javax.swing.ButtonGroup buttonGroupSortLaptop;
    private javax.swing.ButtonGroup buttonGroupSortPc;
    private javax.swing.ButtonGroup buttonGroupSortPhone;
    private javax.swing.JComboBox<String> comboSearchPhoneByPhase;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rbSearchLaptopByName;
    private javax.swing.JRadioButton rbSearchLaptopByRam;
    private javax.swing.JRadioButton rbSearchLaptopBySerial;
    private javax.swing.JRadioButton rbSearchPcByName;
    private javax.swing.JRadioButton rbSearchPcByRam;
    private javax.swing.JRadioButton rbSearchPcBySerial;
    private javax.swing.JRadioButton rbSearchPhoneByImei;
    private javax.swing.JRadioButton rbSearchPhoneByName;
    private javax.swing.JRadioButton rbSearchPhoneByPhase;
    private javax.swing.JRadioButton rbSortChipLaptopASC;
    private javax.swing.JRadioButton rbSortChipLaptopDESC;
    private javax.swing.JRadioButton rbSortChipPcASC;
    private javax.swing.JRadioButton rbSortChipPcDESC;
    private javax.swing.JRadioButton rbSortPhoneNameASC;
    private javax.swing.JRadioButton rbSortPhoneNameDESC;
    private javax.swing.JRadioButton rbSortPhonePhaseASC;
    private javax.swing.JRadioButton rbSortPhonePhaseDESC;
    private javax.swing.JRadioButton rbSortRamLaptopASC;
    private javax.swing.JRadioButton rbSortRamLaptopDESC;
    private javax.swing.JRadioButton rbSortRamPcASC;
    private javax.swing.JRadioButton rbSortRamPcDESC;
    private javax.swing.JTable tblLaptop;
    private javax.swing.JTable tblPc;
    private javax.swing.JTable tblPhone;
    private javax.swing.JTextField txtSearchLaptopByName;
    private javax.swing.JTextField txtSearchLaptopByRam;
    private javax.swing.JTextField txtSearchLaptopBySerial;
    private javax.swing.JTextField txtSearchPcByName;
    private javax.swing.JTextField txtSearchPcByRam;
    private javax.swing.JTextField txtSearchPcBySerial;
    private javax.swing.JTextField txtSearchPhoneByImei;
    private javax.swing.JTextField txtSearchPhoneByName;
    // End of variables declaration//GEN-END:variables

    private void addButtonGroup() {
        buttonGroupSearchPhone.add(rbSearchPhoneByImei);
        buttonGroupSearchPhone.add(rbSearchPhoneByName);
        buttonGroupSearchPhone.add(rbSearchPhoneByPhase);

        buttonGroupSortPhone.add(rbSortPhoneNameASC);
        buttonGroupSortPhone.add(rbSortPhoneNameDESC);
        buttonGroupSortPhone.add(rbSortPhonePhaseASC);
        buttonGroupSortPhone.add(rbSortPhonePhaseDESC);

        buttonGroupSearchPc.add(rbSearchPcBySerial);
        buttonGroupSearchPc.add(rbSearchPcByName);
        buttonGroupSearchPc.add(rbSearchPcByRam);

        buttonGroupSortPc.add(rbSortChipPcASC);
        buttonGroupSortPc.add(rbSortChipPcDESC);
        buttonGroupSortPc.add(rbSortRamPcASC);
        buttonGroupSortPc.add(rbSortRamPcDESC);

        buttonGroupSearchLaptop.add(rbSearchLaptopBySerial);
        buttonGroupSearchLaptop.add(rbSearchLaptopByName);
        buttonGroupSearchLaptop.add(rbSearchLaptopByRam);

        buttonGroupSortLaptop.add(rbSortChipLaptopASC);
        buttonGroupSortLaptop.add(rbSortChipLaptopDESC);
        buttonGroupSortLaptop.add(rbSortRamLaptopASC);
        buttonGroupSortLaptop.add(rbSortRamLaptopDESC);

    }

    private void addActionListener() {
        //đăng ký sự kiện cho từng nút
        //tab quản lý điện thoại
        btnAddPhone.addActionListener(this);
        btnEditPhone.addActionListener(this);
        btnRefreshPhone.addActionListener(this);
        btnRemovePhone.addActionListener(this);
        btnSearchPhone.addActionListener(this);

        rbSearchPhoneByImei.addActionListener(this);
        rbSearchPhoneByName.addActionListener(this);
        rbSearchPhoneByPhase.addActionListener(this);

        rbSortPhoneNameASC.addActionListener(this);
        rbSortPhoneNameDESC.addActionListener(this);
        rbSortPhonePhaseASC.addActionListener(this);
        rbSortPhonePhaseDESC.addActionListener(this);

        //tab quản lý pc
        btnAddPc.addActionListener(this);
        btnEditPc.addActionListener(this);
        btnRefreshPc.addActionListener(this);
        btnRemovePc.addActionListener(this);
        btnSearchPc.addActionListener(this);

        rbSearchPcBySerial.addActionListener(this);
        rbSearchPcByName.addActionListener(this);
        rbSearchPcByRam.addActionListener(this);

        rbSortChipPcASC.addActionListener(this);
        rbSortChipPcDESC.addActionListener(this);
        rbSortRamPcASC.addActionListener(this);
        rbSortRamPcDESC.addActionListener(this);

        //tab quản lý laptop
        btnAddLaptop.addActionListener(this);
        btnEditLaptop.addActionListener(this);
        btnRefreshLaptop.addActionListener(this);
        btnRemoveLaptop.addActionListener(this);
        btnSearchLaptop.addActionListener(this);

        rbSearchLaptopBySerial.addActionListener(this);
        rbSearchLaptopByName.addActionListener(this);
        rbSearchLaptopByRam.addActionListener(this);

        rbSortChipLaptopASC.addActionListener(this);
        rbSortChipLaptopDESC.addActionListener(this);
        rbSortRamLaptopASC.addActionListener(this);
        rbSortRamLaptopDESC.addActionListener(this);

    }

    public void addPhoneCallback(Phone phone) {  //ở cái table sẽ gọi đến phương 
        //thức vào và truyền đến list phone nhận dược
        phones.add(phone);
        showPhone(phone);
        saveData(DataController.PHONE);//lưu phone
    }

    public void addPcCallback(Pc pc) {
        //ở cái table sẽ gọi đến phương 
        //thức vào và truyền đến list pc nhận được
        pcs.add(pc);
        showPc(pc);
        saveData(DataController.PC);//lưu pc
    }

    public void addLaptopCallback(Laptop laptop) {
        //ở cái table sẽ gọi đến phương 
        //thức vào và truyền đến list laptop nhận được
        laptops.add(laptop);
        showLaptop(laptop);
        saveData(DataController.LAPTOP);//lưu laptop
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        //thực hiện các hành động
        var obj = e.getSource();
        if (obj.equals(btnAddPhone)) {
            AddPhoneDialog addPhoneDialog
                    = new AddPhoneDialog(this, rootPaneCheckingEnabled);
            addPhoneDialog.setVisible(true);
        } else if (obj.equals(btnRemovePhone)) {
            removePhone();
        } else if (obj.equals(btnEditPhone)) {
            editPhone();
        } else if (obj.equals(rbSortPhoneNameASC)
                || obj.equals(rbSortPhoneNameDESC)
                || obj.equals(rbSortPhonePhaseASC)
                || obj.equals(rbSortPhonePhaseDESC)) {
            sortPhones(obj);
        } else if (obj.equals(btnSearchPhone)) {
            searchPhones();
        } else if (obj.equals(btnRefreshPhone)) {
            refreshPhones();
        } else if (obj.equals(btnAddPc)) {
            AddPcDialog addPcDialog
                    = new AddPcDialog(this, rootPaneCheckingEnabled);
            addPcDialog.setVisible(true);
        } else if (obj.equals(btnRemovePc)) {
            removePc();
        } else if (obj.equals(btnEditPc)) {
            editPc();
        } else if (obj.equals(rbSortChipPcASC)
                || obj.equals(rbSortChipPcDESC)
                || obj.equals(rbSortRamPcASC)
                || obj.equals(rbSortRamPcDESC)) {
            sortPcs(obj);
        } else if (obj.equals(btnSearchPc)) {
            searchPcs();
        } else if (obj.equals(btnRefreshPc)) {
            refreshPcs();
        } else if (obj.equals(btnAddLaptop)) {
            AddLaptopDialog addLaptopDialog
                    = new AddLaptopDialog(this, rootPaneCheckingEnabled);
            addLaptopDialog.setVisible(true);
        } else if (obj.equals(btnRemoveLaptop)) {
            removeLaptop();
        } else if (obj.equals(btnEditLaptop)) {
            editLaptop();
        }
    }

    //pt hiển thị thông tin ra bảng
    private void showPhone(Phone phone) {
        Object[] row = new Object[]{
            phone.getImei(), phone.getName(), phone.getPhase()
        };
        tableModelPhone.addRow(row); //thêm các thông số bên trên vào bảng
    }

    private void showPc(Pc pc) {
        Object[] row = new Object[]{
            pc.getSerial(), pc.getName(), pc.getCpu(),
            pc.getRam(), pc.getDisk(), pc.getVga()
        };
        tableModelPc.addRow(row); //thêm các thông số bên trên vào bảng
    }

    private void showLaptop(Laptop laptop) {
        Object[] row = new Object[]{
            laptop.getSerial(), laptop.getName(), laptop.getCpu(),
            laptop.getRam(), laptop.getDisk(), laptop.getVga(), laptop.getSize()
        };
        tableModelLaptop.addRow(row); //thêm các thông số bên trên vào bảng
    }

    private void LoadData() {
        //đọc danh sách các điện thoại
        phones = dataController.<Phone>readDataFromFile(DataController.PHONE_FILE);
        //đọc danh sách các PC
        pcs = dataController.<Pc>readDataFromFile(DataController.PC_FILE);
        //đọc danh sách các laptop
        laptops = dataController.<Laptop>readDataFromFile(DataController.LAPTOP_FILE);
    }

    private void ShowData() {
        showPhones();
        showPcs();
        showLaptops();

    }

    private void showPhones() {
        tableModelPhone.setRowCount(0); //xóa hết dữ liệu cũ rồi mới hiển thị lại
        for (Phone phone : phones) {
            showPhone(phone);
        }
    }

    private void showPcs() {
        tableModelPc.setRowCount(0); //xóa hết dữ liệu cũ rồi mới hiển thị lại
        for (Pc pc : pcs) {
            showPc(pc);
        }
    }

    private void showLaptops() {
        tableModelLaptop.setRowCount(0); //xóa hết dữ liệu cũ rồi mới hiển thị lại
        for (Laptop laptop : laptops) {
            showLaptop(laptop);
        }
    }

    private void saveData(int choice) {
        switch (choice) {
            case DataController.PHONE:
                dataController.<Phone>writeToFile(phones,
                        DataController.PHONE_FILE);
                break;
            case DataController.PC:
                dataController.<Pc>writeToFile(pcs,
                        DataController.PC_FILE);
                break;
            case DataController.LAPTOP:
                dataController.<Laptop>writeToFile(laptops,
                        DataController.LAPTOP_FILE);
                break;

        }
    }

    private void removePhone() {
        int selectedIndex = tblPhone.getSelectedRow();//chọn dòng cần xóa
        //chỉ số dòng trong bảng chính là chỉ số dòng trong danh sách
        if (selectedIndex > -1) {
            var msg = "Bạn có chắc chắn muốn xóa bản ghi này không?";
            int confirm = JOptionPane.showConfirmDialog(rootPane, msg);
            if (confirm == JOptionPane.OK_OPTION) {
                phones.remove(selectedIndex); //xóa khỏi danh sách
                tableModelPhone.removeRow(selectedIndex); //xóa khỏi bảng
                dataController.<Phone>writeToFile(phones,
                        DataController.PHONE_FILE);
            }
        } else {
            var msg = "Vui lòng chọn 1 bản ghi để xóa!";
            showDialogMessage(msg);
        }
    }

    private void removePc() {
        int selectedIndex = tblPc.getSelectedRow();//chọn dòng cần xóa
        //chỉ số dòng trong bảng chính là chỉ số dòng trong danh sách
        if (selectedIndex > -1) {
            var msg = "Bạn có chắc chắn muốn xóa bản ghi này không?";
            int confirm = JOptionPane.showConfirmDialog(rootPane, msg);
            if (confirm == JOptionPane.OK_OPTION) {
                pcs.remove(selectedIndex); //xóa khỏi danh sách
                tableModelPc.removeRow(selectedIndex); //xóa khỏi bảng
                dataController.<Pc>writeToFile(pcs,
                        DataController.PC_FILE);
            }
        } else {
            var msg = "Vui lòng chọn 1 bản ghi để xóa!";
            showDialogMessage(msg);
        }
    }

    private void removeLaptop() {
        int selectedIndex = tblLaptop.getSelectedRow();//chọn dòng cần xóa
        //chỉ số dòng trong bảng chính là chỉ số dòng trong danh sách
        if (selectedIndex > -1) {
            var msg = "Bạn có chắc chắn muốn xóa bản ghi này không?";
            int confirm = JOptionPane.showConfirmDialog(rootPane, msg);
            if (confirm == JOptionPane.OK_OPTION) {
                laptops.remove(selectedIndex); //xóa khỏi danh sách
                tableModelLaptop.removeRow(selectedIndex); //xóa khỏi bảng
                dataController.<Laptop>writeToFile(laptops,
                        DataController.LAPTOP_FILE);
            }
        } else {
            var msg = "Vui lòng chọn 1 bản ghi để xóa!";
            showDialogMessage(msg);
        }
    }

    private void showDialogMessage(String msg) {
        JOptionPane.showMessageDialog(rootPane, msg);
    }

    private void editPhone() {
        int selectedIndex = tblPhone.getSelectedRow();//chọn dòng cần edit
        //chỉ số dòng trong bảng chính là chỉ số dòng trong danh sách
        if (selectedIndex > -1) {
            Phone phone = phones.get(selectedIndex);
            EditPhoneDialog editPhoneDialog
                    = new EditPhoneDialog(this, rootPaneCheckingEnabled, phone);
            editPhoneDialog.setVisible(true);

        } else {
            var msg = "Vui lòng chọn 1 bản ghi để sửa!";
            showDialogMessage(msg);
        }
    }

    private void editPc() {
        int selectedIndex = tblPc.getSelectedRow();//chọn dòng cần edit
        //chỉ số dòng trong bảng chính là chỉ số dòng trong danh sách
        if (selectedIndex > -1) {
            Pc pc = pcs.get(selectedIndex);
            EditPcDialog editPcDialog
                    = new EditPcDialog(this, rootPaneCheckingEnabled, pc);
            editPcDialog.setVisible(true);

        } else {
            var msg = "Vui lòng chọn 1 bản ghi để sửa!";
            showDialogMessage(msg);
        }
    }
    
    private void editLaptop() {
        int selectedIndex = tblLaptop.getSelectedRow();//chọn dòng cần edit
        //chỉ số dòng trong bảng chính là chỉ số dòng trong danh sách
        if (selectedIndex > -1) {
            Laptop laptop = laptops.get(selectedIndex);
            EditLaptopDialog editLaptopDialog
                    = new EditLaptopDialog(this, rootPaneCheckingEnabled, laptop);
            editLaptopDialog.setVisible(true);

        } else {
            var msg = "Vui lòng chọn 1 bản ghi để sửa!";
            showDialogMessage(msg);
        }
    }

    public void editPhoneCallback(Phone phone) {
        int selectedIndex = tblPhone.getSelectedRow();
        phones.set(selectedIndex, phone);
        tableModelPhone.removeRow(selectedIndex);//xóa dòng tại vị trí đã chọn
        Object[] row = new Object[]{
            phone.getImei(), phone.getName(), phone.getPhase()
        };
        tableModelPhone.insertRow(selectedIndex, row);//chèn dòng sau khi đã sửa
        saveData(DataController.PHONE);//lưu dữ liệu vào file PHONE
    }

    public void editPcCallback(Pc pc) {
        int selectedIndex = tblPc.getSelectedRow();
        pcs.set(selectedIndex, pc);
        tableModelPc.removeRow(selectedIndex);//xóa dòng tại vị trí đã chọn
        Object[] row = new Object[]{
            pc.getSerial(), pc.getName(), pc.getCpu(),
            pc.getRam(), pc.getDisk(), pc.getVga()
        };
        tableModelPc.insertRow(selectedIndex, row);//chèn dòng sau khi đã sửa
        saveData(DataController.PC);//lưu dữ liệu vào file PHONE
    }
    
    public void editLaptopCallback(Laptop laptop) {
        int selectedIndex = tblLaptop.getSelectedRow();
        laptops.set(selectedIndex, laptop);
        tableModelLaptop.removeRow(selectedIndex);//xóa dòng tại vị trí đã chọn
        Object[] row = new Object[]{
            laptop.getSerial(), laptop.getName(), laptop.getCpu(),
            laptop.getRam(), laptop.getDisk(), laptop.getVga(), laptop.getSize()
        };
        tableModelLaptop.insertRow(selectedIndex, row);//chèn dòng sau khi đã sửa
        saveData(DataController.LAPTOP);//lưu dữ liệu vào file PHONE
    }

    private void sortPhones(Object obj) {
        if (obj.equals(rbSortPhoneNameASC)) {
            dataController.sortPhoneByNameASC(phones);
        } else if (obj.equals(rbSortPhoneNameDESC)) {
            dataController.sortPhoneByNameDESC(phones);
        } else if (obj.equals(rbSortPhonePhaseASC)) {
            dataController.sortPhoneByPhaseASC(phones);
        } else if (obj.equals(rbSortPhonePhaseDESC)) {
            dataController.sortPhoneByPhaseDESC(phones);
        }
        showPhones();
    }

    private void sortPcs(Object obj) {
        if (obj.equals(rbSortChipPcASC)) {
            dataController.sortPcByChipASC(pcs);
        } else if (obj.equals(rbSortChipPcDESC)) {
            dataController.sortPcByChipDESC(pcs);
        } else if (obj.equals(rbSortRamPcASC)) {
            dataController.sortPcByRamASC(pcs);
        } else if (obj.equals(rbSortRamPcDESC)) {
            dataController.sortPcByRamDESC(pcs);
        }
        showPcs();
    }

    private void searchPhones() {
        if (rbSearchPhoneByImei.isSelected()) {
            var key = txtSearchPhoneByImei.getText();
            if (key.isEmpty()) {
                var msg = "Vui lòng nhập số IMEI cần tìm kiếm!";
                showDialogMessage(msg);
            } else {
                var result = dataController.searchPhoneByImei(phones, key);
                phones.clear();
                phones.addAll(result);
                checkAndShowSearchResult();
            }
        } else if (rbSearchPhoneByName.isSelected()) {
            var key = txtSearchPhoneByName.getText();
            if (key.isEmpty()) {
                var msg = "Vui lòng nhập tên điện thoại cần tìm kiếm!";
                showDialogMessage(msg);
            } else {
                var result = dataController.searchPhoneByName(phones, key);
                phones.clear();
                phones.addAll(result);
                checkAndShowSearchResult();
            }
        } else if (rbSearchPhoneByPhase.isSelected()) {
            var key = comboSearchPhoneByPhase.getSelectedItem().toString();
            var result = dataController.searchPhoneByPhase(phones, key);
            phones.clear();
            phones.addAll(result);
            checkAndShowSearchResult();

        } else {
            var msg = "Vui lòng chọn tiêu chí tìm kiếm trước!";
            showDialogMessage(msg);
        }
    }

    private void searchPcs() {
        if (rbSearchPcBySerial.isSelected()) {
            var key = txtSearchPcBySerial.getText();
            if (key.isEmpty()) {
                var msg = "Vui lòng nhập số serial cần tìm kiếm!";
                showDialogMessage(msg);
            } else {
                var result = dataController.searchPcBySerial(pcs, key);
                pcs.clear();
                pcs.addAll(result);
                checkAndShowSearchPcs();
            }
        } else if (rbSearchPcByName.isSelected()) {
            var key = txtSearchPcByName.getText();
            if (key.isEmpty()) {
                var msg = "Vui lòng nhập tên PC cần tìm kiếm!";
                showDialogMessage(msg);
            } else {
                var result = dataController.searchPcByName(pcs, key);
                pcs.clear();
                pcs.addAll(result);
                checkAndShowSearchPcs();
            }
        } else if (rbSearchPcByRam.isSelected()) {
            var key = txtSearchPcByRam.getText();
            if (key.isEmpty()) {
                var msg = "Vui lòng nhập dung lượng RAM cần tìm kiếm!";
                showDialogMessage(msg);
            } else {
                var result = dataController.searchPcByRam(pcs, key);
                pcs.clear();
                pcs.addAll(result);
                checkAndShowSearchPcs();
            }
        } else {
            var msg = "Vui lòng chọn tiêu chí tìm kiếm trước!";
            showDialogMessage(msg);
        }
    }

    private void checkAndShowSearchResult() {
        if (phones.size() > 0) {
            showPhones();
            var msg = "Tìm thấy " + phones.size() + " kết quả";
            showDialogMessage(msg);
        } else {
            phones.clear();
            showPhones();
            var msg = "Không tìm thấy kết quả nào";
            showDialogMessage(msg);
        }
    }

    private void checkAndShowSearchPcs() {
        if (pcs.size() > 0) {
            showPcs();
            var msg = "Tìm thấy " + pcs.size() + " kết quả";
            showDialogMessage(msg);
        } else {
            pcs.clear();
            showPcs();
            var msg = "Không tìm thấy kết quả nào";
            showDialogMessage(msg);
        }
    }

    private void refreshPhones() {
        var text = "";
        txtSearchPhoneByImei.setText(text);
        txtSearchPhoneByName.setText(text);
        comboSearchPhoneByPhase.setSelectedIndex(0);
        buttonGroupSearchPhone.clearSelection();
        buttonGroupSortPhone.clearSelection();

        phones.clear();
        phones.addAll(dataController.<Phone>readDataFromFile(DataController.PHONE_FILE));
        showPhones();

    }

    private void refreshPcs() {
        var text = "";
        txtSearchPcBySerial.setText(text);
        txtSearchPcByName.setText(text);
        txtSearchPcByRam.setText(text);
        buttonGroupSortPc.clearSelection();
        buttonGroupSearchPc.clearSelection();

        pcs.clear();
        pcs.addAll(dataController.<Pc>readDataFromFile(DataController.PC_FILE));
        showPcs();

    }

}
